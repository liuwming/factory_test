/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.yeelight.rtt;

public class rt_param_t {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected rt_param_t(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(rt_param_t obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        rtt_interfaceJNI.delete_rt_param_t(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setDuration(rt_param_field_t value) {
    rtt_interfaceJNI.rt_param_t_duration_set(swigCPtr, this, rt_param_field_t.getCPtr(value), value);
  }

  public rt_param_field_t getDuration() {
    long cPtr = rtt_interfaceJNI.rt_param_t_duration_get(swigCPtr, this);
    return (cPtr == 0) ? null : new rt_param_field_t(cPtr, false);
  }

  public void setSample_rate(rt_param_field_t value) {
    rtt_interfaceJNI.rt_param_t_sample_rate_set(swigCPtr, this, rt_param_field_t.getCPtr(value), value);
  }

  public rt_param_field_t getSample_rate() {
    long cPtr = rtt_interfaceJNI.rt_param_t_sample_rate_get(swigCPtr, this);
    return (cPtr == 0) ? null : new rt_param_field_t(cPtr, false);
  }

  public void setThresh_avg_rssi(rt_param_field_t value) {
    rtt_interfaceJNI.rt_param_t_thresh_avg_rssi_set(swigCPtr, this, rt_param_field_t.getCPtr(value), value);
  }

  public rt_param_field_t getThresh_avg_rssi() {
    long cPtr = rtt_interfaceJNI.rt_param_t_thresh_avg_rssi_get(swigCPtr, this);
    return (cPtr == 0) ? null : new rt_param_field_t(cPtr, false);
  }

  public void setThresh_min_rssi(rt_param_field_t value) {
    rtt_interfaceJNI.rt_param_t_thresh_min_rssi_set(swigCPtr, this, rt_param_field_t.getCPtr(value), value);
  }

  public rt_param_field_t getThresh_min_rssi() {
    long cPtr = rtt_interfaceJNI.rt_param_t_thresh_min_rssi_get(swigCPtr, this);
    return (cPtr == 0) ? null : new rt_param_field_t(cPtr, false);
  }

  public void setThresh_max_rssi(rt_param_field_t value) {
    rtt_interfaceJNI.rt_param_t_thresh_max_rssi_set(swigCPtr, this, rt_param_field_t.getCPtr(value), value);
  }

  public rt_param_field_t getThresh_max_rssi() {
    long cPtr = rtt_interfaceJNI.rt_param_t_thresh_max_rssi_get(swigCPtr, this);
    return (cPtr == 0) ? null : new rt_param_field_t(cPtr, false);
  }

  public void setThresh_packet_loss(rt_param_field_t value) {
    rtt_interfaceJNI.rt_param_t_thresh_packet_loss_set(swigCPtr, this, rt_param_field_t.getCPtr(value), value);
  }

  public rt_param_field_t getThresh_packet_loss() {
    long cPtr = rtt_interfaceJNI.rt_param_t_thresh_packet_loss_get(swigCPtr, this);
    return (cPtr == 0) ? null : new rt_param_field_t(cPtr, false);
  }

  public rt_param_t() {
    this(rtt_interfaceJNI.new_rt_param_t(), true);
  }

}
